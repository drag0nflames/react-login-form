{"version":3,"sources":["SignUpForm.js","SignInForm.js","App.js","serviceWorker.js","index.js"],"names":["SignUpForm","react_default","a","createElement","className","onSubmit","htmlFor","type","id","placeholder","name","href","Component","SignInForm","react_router_dom","to","App","style","height","concat","window","innerHeight","exact","activeClassName","react_router","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.47b65905.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SignUpForm extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"FormFields\" onSubmit=\"this.handleSubmit\">\r\n          <div className=\"FormField\">\r\n            <label className=\"FormField__Label\" htmlFor=\"name\">\r\n              Full Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              className=\"FormField__Input\"\r\n              placeholder=\"Enter your name\"\r\n              name=\"name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"FormField\">\r\n            <label className=\"FormField__Label\" htmlFor=\"email\">\r\n              Email Address\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className=\"FormField__Input\"\r\n              placeholder=\"Enter your email address\"\r\n              name=\"email\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"FormField\">\r\n            <label className=\"FormField__Label\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"FormField__Input\"\r\n              name=\"password\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"FormField\">\r\n            <label className=\"FormField__Label\" htmlFor=\"password\">\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirm_password\"\r\n              className=\"FormField__Input\"\r\n              name=\"confirm_password\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"FormField\">\r\n            <label className=\"FormField__CheckboxLabel\">\r\n              <input\r\n                className=\"FormField__Checkbox\"\r\n                type=\"checkbox\"\r\n                name=\"hasAgreed\"\r\n              />\r\n              I agree to all the statements in{\" \"}\r\n              <a href=\"_blank\" className=\"FormField_TermsLink\">\r\n                terms of service\r\n              </a>\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <button className=\"FormField__Button mr-20\">Sign Up</button>\r\n            <a href=\"_blank\" className=\"FormField_Link\">\r\n              Register?\r\n            </a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SignInForm extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"FormField\" onSubmit=\"this.handleSubmit\">\r\n          <div className=\"FormField\">\r\n            <label className=\"FormField__Label\" htmlFor=\"email\">\r\n              Email Address\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className=\"FormField__Input\"\r\n              placeholder=\"Enter your email address\"\r\n              name=\"email\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"FormField\">\r\n            <label className=\"FormField__Label\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"FormField__Input\"\r\n              placeholder=\"Enter Your Password\"\r\n              name=\"password\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <button className=\"FormField__Button mr-20\">Sign In</button>\r\n            <Link to=\"/\" className=\"FormField_Link\">\r\n              Register\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInForm;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport SignUpForm from \"./SignUpForm\";\nimport SignInForm from \"./SignInForm\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"row\" style={{ height: `${window.innerHeight}px` }}>\n          <div className=\"App__Aside col-md-6\" />\n          <div className=\"App__Form col-md-6 col-xs-12\">\n            <div className=\"PageSwitcher\">\n              <NavLink\n                exact\n                to=\"/sign-in\"\n                activeClassName=\"PageSwitcher__Item--Active\"\n                className=\"PageSwitcher__Item \"\n              >\n                Sign In\n              </NavLink>\n              <NavLink\n                exact\n                to=\"/\"\n                activeClassName=\"PageSwitcher__Item--Active\"\n                className=\"PageSwitcher__Item\"\n              >\n                Sign Up\n              </NavLink>\n            </div>\n\n            <div className=\"FormTitle\">\n              <NavLink\n                to=\"/sign-in\"\n                activeClassName=\" FormTitle__Link--Active\"\n                className=\"FormTitle__Link\"\n              >\n                Sign In\n              </NavLink>{\" \"}\n              or{\" \"}\n              <NavLink\n                exact\n                to=\"/\"\n                href=\"_blank\"\n                activeClassName=\" FormTitle__Link--Active\"\n                className=\"FormTitle__Link\"\n              >\n                Sign Up\n              </NavLink>\n            </div>\n\n            <Route exact path=\"/\" component={SignUpForm} />\n\n            <Route path=\"/sign-in\" component={SignInForm} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}